@mixin m($margin) {
  margin: $margin !important;
}

@mixin ml($margin) {
  margin-left: $margin !important;
}

@mixin mr($margin) {
  margin-right: $margin !important;
}

@mixin mt($margin) {
  margin-top: $margin !important;
}

@mixin mb($margin) {
  margin-bottom: $margin !important;
}

@mixin mx($margin) {
  @include ml($margin);
  @include mr($margin);
}

@mixin my($margin) {
  @include mt($margin);
  @include mb($margin);
}

@mixin p($padding) {
  padding: $padding !important;
}

@mixin pl($padding) {
  padding-left: $padding !important;
}

@mixin pr($padding) {
  padding-right: $padding !important;
}

@mixin pt($padding) {
  padding-top: $padding !important;
}

@mixin pb($padding) {
  padding-bottom: $padding !important;
}

@mixin px($padding) {
  @include pl($padding);
  @include pr($padding);
}

@mixin py($padding) {
  @include pt($padding);
  @include pb($padding);
}

@mixin b($border) {
  border: $border solid bgcolor("silver") !important;
}

@mixin bl($border) {
  border-left: $border solid bgcolor("silver") !important;
}

@mixin br($border) {
  border-right: $border solid bgcolor("silver") !important;
}

@mixin bt($border) {
  border-top: $border solid bgcolor("silver") !important;
}

@mixin bb($border) {
  border-bottom: $border solid bgcolor("silver") !important;
}

@mixin bx($border) {
  @include bl($border);
  @include br($border);
}

@mixin by($border) {
  @include bt($border);
  @include bb($border);
}


@for $i from 0 through 10 {
  $i-with-unit: #{$i}rem;

  .m-#{$i} {
    @include m($i-with-unit);
  }
  .mx-#{$i} {
    @include mx($i-with-unit);
  }
  .ml-#{$i} {
    @include ml($i-with-unit);
  }
  .mr-#{$i} {
    @include mr($i-with-unit);
  }
  .my-#{$i} {
    @include my($i-with-unit);
  }
  .mt-#{$i} {
    @include mt($i-with-unit);
  }
  .mb-#{$i} {
    @include mb($i-with-unit);
  }

  .p-#{$i} {
    @include p($i-with-unit);
  }
  .px-#{$i} {
    @include px($i-with-unit);
  }
  .pl-#{$i} {
    @include pl($i-with-unit);
  }
  .pr-#{$i} {
    @include pr($i-with-unit);
  }
  .py-#{$i} {
    @include py($i-with-unit);
  }
  .pt-#{$i} {
    @include pt($i-with-unit);
  }
  .pb-#{$i} {
    @include pb($i-with-unit);
  }  
}

.m-auto {
  @include m(auto);
}

.mx-auto {
  @include mx(auto);
}

.ml-auto {
  @include ml(auto);
}

.mr-auto {
  @include mr(auto);
}

.my-auto {
  @include my(auto);
}

.mt-auto {
  @include mt(auto);
}

.mb-auto {
  @include mb(auto);
}

/* BORDER */
.border {
  border: 1px solid bgcolor("silver") !important;
}

.no-border {
  border: 0 !important;
}


@for $i from 0 through 10 {  
  $i-with-unit: #{$i}px;
  .b-#{$i} {
    @include b($i-with-unit);
  }

  .bt-#{$i} {
    @include bt($i-with-unit);
  }

  .bb-#{$i} {
    @include bb($i-with-unit);
  }

  .bl-#{$i} {
    @include bl($i-with-unit);
  }
  
  .br-#{$i} {
    @include br($i-with-unit);
  }

  .bx-#{$i} {
    @include bx($i-with-unit);
  }

  .by-#{$i} {
    @include by($i-with-unit);
  }
}